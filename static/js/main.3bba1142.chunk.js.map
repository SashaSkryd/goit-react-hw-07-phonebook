{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Alert/alert.module.css","Components/Title/title.module.css","Container/animation/titleAnimation.module.css","Container/App.module.css","redux/actions/actions.js","redux/contactOperation.js","Components/Alert/alert.js","redux/contactsSelectors.js","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","Components/Title/Title.js","Container/App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","filterContact","addContact","contact","dispatch","axios","post","then","response","data","catch","error","fetchContact","get","removeContact","id","delete","AlertMessage","children","className","classes","alertMessage","getContact","state","contacts","getFilter","filter","getFilteredItems","createSelector","name","toLowerCase","includes","getVisibleFilter","length","INITIAL_STATE","number","isExists","ContactForm","handleChange","event","target","value","setState","getIsExist","props","find","toggleIsExist","prevstate","handleSubmit","preventDefault","console","log","setTimeout","reset","this","onSubmit","style","form","title","type","placeholder","onChange","input","btn","btnText","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","contactOperation","connect","contactSelector","filterRender","visibleFilter","container","e","deleteItem","array","TransitionGroup","component","list","map","item","listItem","deskription","onClick","App","onFetchContact","appear","animation","unmountOnExid","Title","createContactsReducer","createReducer","actions","payload","createFilterReducer","store","configureStore","reducer","subscribe","localStorage","setItem","JSON","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bba1142.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__26eSZ\",\"title\":\"ContactForm_title__PH40X\",\"btn\":\"ContactForm_btn__23rSF\",\"btnText\":\"ContactForm_btnText__2SurI\",\"input\":\"ContactForm_input__3iw69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2Hxs2\",\"deskription\":\"ContactList_deskription__36uW-\",\"list\":\"ContactList_list__3I8cV\",\"btn\":\"ContactList_btn__vpSLx\",\"btnText\":\"ContactList_btnText__2_Tcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3EZjQ\",\"title\":\"Filter_title__3zx5j\",\"input\":\"Filter_input__7_Oo1\",\"input-appear\":\"Filter_input-appear__1kFsy\",\"input-appear-active\":\"Filter_input-appear-active__2H4VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertMessage\":\"alert_alertMessage__1v1au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__1aPmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleAnimation_appear__2fCj-\",\"appearActive\":\"titleAnimation_appearActive__184Yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Dd-KS\"};","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nconst addContactRequest = createAction(\"contact/addRequest\")\r\nconst addContactSuccess = createAction(\"contact/addSuccess\")\r\nconst addContactError = createAction(\"contact/addError\")\r\n\r\nconst fetchContactRequest = createAction(\"contact/fetchRequest\")\r\nconst fetchContactSuccess = createAction(\"contact/fetchSuccess\")\r\nconst fetchContactError = createAction(\"contact/fetchError\")\r\n\r\nconst removeContactRequest = createAction(\"contact/removeRequest\")\r\nconst removeContactSuccess = createAction(\"contact/removeSuccess\")\r\nconst removeContactError = createAction(\"contact/removeError\")\r\n\r\nconst addContact = createAction(\"ADD_CONTACT\")\r\nconst removeContact = createAction(\"REMOVE_CONTACT\")\r\nconst filterContact = createAction(\"CHANGE_FITER\")\r\n\r\nexport {\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  fetchContactError,\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n  addContact,\r\n  removeContact,\r\n  filterContact,\r\n}\r\n","import axios from \"axios\"\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n} from \"./actions/actions.js\"\r\n\r\nconst addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest())\r\n\r\n  axios\r\n    .post(\"http://localhost:2000/contacts\", { ...contact })\r\n    .then((response) => {\r\n      dispatch(addContactSuccess(response.data))\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(fetchContactRequest())\r\n\r\n  axios\r\n    .get(\"http://localhost:2000/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)))\r\n}\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest())\r\n\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(id))\r\n    })\r\n    .catch((error) => dispatch(removeContactError(error)))\r\n}\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContact,\r\n  removeContact,\r\n}\r\n","import React from 'react';\r\n\r\nimport classes from './alert.module.css';\r\n\r\nexport default function AlertMessage({ children }) {\r\n  return <div className={classes.alertMessage}>{children}</div>;\r\n}","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nconst getContact = (state) => state.contacts\r\n\r\nconst getFilter = (state) => state.filter\r\n\r\nconst getVisibleFilter = (state) => state.contacts.length > 1\r\n\r\n// const getFilteredItems = state => {\r\n//     const contacts = getContact(state)\r\n\r\n//     const filter = getFilter(state)\r\n\r\n//     return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n// }\r\n\r\nconst getFilteredItems = createSelector([getContact, getFilter], (contacts, filter) => {\r\n  return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n})\r\n\r\nexport default {\r\n  getContact,\r\n  getFilteredItems,\r\n  getVisibleFilter,\r\n  getFilter,\r\n}\r\n","import React, { Component } from \"react\"\r\nimport style from \"./ContactForm.module.css\"\r\nimport contactOperation from \"../../redux/contactOperation.js\"\r\nimport { connect } from \"react-redux\"\r\nimport AlertMessage from \"../Alert/alert.js\"\r\n\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"../../Container/animation/alertAnimation.css\"\r\n\r\nimport contactSelector from \"../../redux/contactsSelectors.js\"\r\n\r\nconst INITIAL_STATE = { name: \"\", number: \"\", isExists: false }\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  getIsExist = () => !!this.props.contacts.find((contact) => contact.name === this.state.name)\r\n  toggleIsExist = () => this.setState((prevstate) => ({ isExists: !prevstate.isExists }))\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (this.getIsExist()) {\r\n      this.toggleIsExist()\r\n      console.log(this.state.isExists)\r\n      setTimeout(() => {\r\n        this.toggleIsExist()\r\n      }, 1500)\r\n    } else {\r\n      const { name, number } = this.state\r\n      this.props.addContact({ name, number })\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE })\r\n  }\r\n  render() {\r\n    const { name, number, isExists } = this.state\r\n    console.log(isExists)\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={style.form}>\r\n          <label>\r\n            <h2 className={style.title}>Name</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              className={style.input}\r\n            />\r\n          </label>\r\n          <label>\r\n            <h2 className={style.title}>Phone</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder=\"Enter phone\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              className={style.input}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={style.btn}>\r\n            {\" \"}\r\n            <span className={style.btnText}>add contact</span>\r\n          </button>\r\n        </form>\r\n        <CSSTransition in={isExists} timeout={250} classNames=\"alert\" unmountOnExit>\r\n          <AlertMessage>{\"Is already in contacts.\"}</AlertMessage>\r\n        </CSSTransition>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: contactSelector.getContact(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactOperation.addContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport style from \"./Filter.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterContact } from \"../../redux/actions/actions.js\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\n\r\nimport contactSelector from \"../../redux/contactsSelectors.js\"\r\n\r\nfunction Filter({ filter, filterRender, visibleFilter }) {\r\n  return (\r\n    <CSSTransition in={!!visibleFilter} timeout={250} classNames={style.input} unmountOnExit>\r\n      <div className={style.container}>\r\n        <label>\r\n          <h2 className={style.title}>Find contact by name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            placeholder=\"Finder\"\r\n            value={filter}\r\n            onChange={(e) => filterRender(e.target.value)}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterRender: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: contactSelector.getFilter(state),\r\n    visibleFilter: contactSelector.getVisibleFilter(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterRender: filterContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React from \"react\"\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport PropTypes from \"prop-types\"\r\nimport style from \"./ContactList.module.css\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../../Container/animation/listAnimation.css\"\r\nimport contactOperation from \"../../redux/contactOperation.js\"\r\n\r\nimport contactSelector from \"../../redux/contactsSelectors.js\"\r\n\r\nconst ContactList = ({ array, deleteItem }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={style.list}>\r\n      {array.map((item) => (\r\n        <CSSTransition key={item.id} timeout={250} classNames=\"item\">\r\n          <li className={style.listItem} key={item.id}>\r\n            <span className={style.deskription}>{item.name}</span>\r\n            <span className={style.deskription}>{item.number}</span>\r\n            <button type=\"button\" onClick={() => deleteItem(item.id)} className={style.btn}>\r\n              <span className={style.btnText}>X</span>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  array: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteItem: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { array: contactSelector.getFilteredItems(state) }\r\n}\r\nconst mapDispatchToProps = {\r\n  deleteItem: contactOperation.removeContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React from 'react'\r\nimport style from './title.module.css'\r\n\r\nconst title = ({ title }) => {\r\n    return (\r\n        <h1 className={style.title}>{title}</h1>\r\n    )\r\n}\r\nexport default title","import React, { Component } from \"react\"\nimport ContactForm from \"../Components/ContactForm/ContactForm.jsx\"\nimport Filter from \"../Components/Filter/Filter.jsx\"\nimport ContactList from \"../Components/ContactList/ContactList.jsx\"\nimport Title from \"../Components/Title/Title.js\"\n\nimport contactOperation from \"../redux/contactOperation.js\"\nimport { connect } from \"react-redux\"\n\nimport { CSSTransition } from \"react-transition-group\"\nimport animation from \"./animation/titleAnimation.module.css\"\nimport style from \"./App.module.css\"\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContact()\n  }\n\n  render() {\n    return (\n      <>\n        <div className={style.container}>\n          <CSSTransition in={true} appear={true} classNames={animation} unmountOnExid timeout={500}>\n            <Title title=\"Phonebook\" />\n          </CSSTransition>\n          <ContactForm />\n          <Filter />\n          <ContactList />\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  onFetchContact: contactOperation.fetchContact,\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport {\r\n  filterContact,\r\n  addContactSuccess,\r\n  fetchContactSuccess,\r\n  removeContactSuccess,\r\n} from \"../actions/actions.js\"\r\n\r\nconst createAddContact = (state, actions) => {\r\n  return [...state, { ...actions.payload }]\r\n}\r\n\r\nconst createRemoveContact = (state, actions) => {\r\n  return state.filter((contact) => {\r\n    return contact.id !== actions.payload\r\n  })\r\n}\r\n\r\nconst createContactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (state, actions) => actions.payload,\r\n  [addContactSuccess]: createAddContact,\r\n  [removeContactSuccess]: createRemoveContact,\r\n})\r\n\r\nconst createFilterReducer = createReducer(\"\", {\r\n  [filterContact]: (state, actions) => actions.payload,\r\n})\r\n\r\nexport { createContactsReducer, createFilterReducer }\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { createContactsReducer, createFilterReducer } from \"../redux/reducers/reducer.js\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: createContactsReducer,\r\n    filter: createFilterReducer,\r\n  },\r\n})\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"Contacts\", JSON.stringify(store.getState().contacts))\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Container/App.js';\nimport {Provider} from 'react-redux'\nimport store from './redux/store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // <React.StrictMode>\n    // <BrowserRouter>\n    // </BrowserRouter>\n  // {/* </React.StrictMode>, */}\n  document.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}